{
  "openapi": "3.0.3",
  "info": {
    "title": "Cyberlark API",
    "description": "",
    "version": "0.0.1"
  },
  "servers": [
    {
      "description": "jr",
      "url": "https://<api-endpoint>"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Client",
      "description": "Client APIs"
    },
    {
      "name": "Agent",
      "description": "Agent APIs"
    },
    {
      "name": "Property",
      "description": "Property APIs"
    },
    {
      "name": "File",
      "description": "File APIs"
    },
    {
      "name": "Template",
      "description": "Email Template APIs"
    },
    {
      "name": "Marketing",
      "description": "Marketing APIs"
    },
    {
      "name": "Reminder",
      "description": "Reminder APIs"
    },
    {
      "name": "Settings",
      "description": "Settings APIs"
    },
    {
      "name": "Profile",
      "description": "Profile APIs"
    },
    {
      "name": "Version",
      "description": "API version"
    }
  ],
  "paths": {
    "/client": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Add a new client",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addClient"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "List clients - NEED REWORK ON API - DO NOT USE -",
        "parameters": [
          {
            "name": "param",
            "description": "List parameters, such as filter or next page. The param string is encoded",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/client/count": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get the total number of clients",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/client/{id}": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Find client details by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "by uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Client"
        ],
        "summary": "Update an existing client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "by uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addClient"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Client"
        ],
        "summary": "Delete client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "by uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful or failed"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/property": {
      "post": {
        "tags": [
          "Property"
        ],
        "summary": "Add a new property",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addProperty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Property"
        ],
        "summary": "List properties",
        "parameters": [
          {
            "name": "param",
            "description": "List parameters, such as filter or next page. The param string is encoded",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/property/count": {
      "get": {
        "tags": [
          "Property"
        ],
        "summary": "Get the total number of properties",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/property/{id}": {
      "get": {
        "tags": [
          "Property"
        ],
        "summary": "Find property details by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "by uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Property"
        ],
        "summary": "Update an existing property",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "by uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addProperty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Property"
        ],
        "summary": "Delete property",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "by uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful or failed"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/file": {
      "post": {
        "tags": [
          "File"
        ],
        "summary": "Add new files",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addFile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "File"
        ],
        "summary": "Delete file(s) by id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "name": "id",
                  "in": "path",
                  "description": "by uuid",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                },
                "example": [
                  "uuid1",
                  "uuid2"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/file/{id}": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Get file by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "by uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "File"
        ],
        "summary": "Update an existing file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "by uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateFile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/file/upload": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Get pre-signed url for file upload",
        "parameters": [
          {
            "name": "numOfUrlRequests",
            "in": "query",
            "description": "Number of URLs needed",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/profile": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Check if email has profile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/marketing": {
      "post": {
        "tags": [
          "Marketing"
        ],
        "summary": "Send marketing emails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/marketing"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/template": {
      "post": {
        "tags": [
          "Template"
        ],
        "summary": "Add a new template",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Template"
        ],
        "summary": "List templates - NEED REWORK ON API - DO NOT USE -",
        "parameters": [
          {
            "name": "param",
            "description": "List parameters, such as filter or next page. The param string is encoded",
            "in": "query",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/template/count": {
      "get": {
        "tags": [
          "Template"
        ],
        "summary": "Get the total number of templates",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/template/{id}": {
      "get": {
        "tags": [
          "Template"
        ],
        "summary": "Find template details by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "by uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Template"
        ],
        "summary": "Update an existing template",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "by uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Template"
        ],
        "summary": "Delete template",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "by uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful or failed"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/settings": {
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Add a new setting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "List all settings",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/settings/{name}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Find settings details by name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "by name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "Update an existing setting",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "by name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Settings"
        ],
        "summary": "Delete the setting by name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "by name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful or failed"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reminder": {
      "post": {
        "tags": [
          "Reminder"
        ],
        "summary": "Add a new reminder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addReminder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Reminder"
        ],
        "summary": "List all reminder",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/reminder/{id}": {
      "get": {
        "tags": [
          "Reminder"
        ],
        "summary": "Find reminder details by uuid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "by uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Reminder"
        ],
        "summary": "Update an existing reminder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "by uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addReminder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Reminder"
        ],
        "summary": "Delete the reminder by uuid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "by uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful or failed"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/version": {
      "get": {
        "tags": [
          "Version"
        ],
        "summary": "Show API version",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/agent": {
      "post": {
        "tags": [
          "Agent"
        ],
        "summary": "Add a new agent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addAgent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Agent added successfully"
          },
          "201": {
            "description": "User account already exists at this UserPool"
          },
          "400": {
            "description": "username is require"
          },
          "500": {
            "description": "Unexpected server error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "addProperty": {
        "type": "object",
        "properties": {
          "address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string",
                "maxLength": 100,
                "example": "4 main street"
              },
              "suburb": {
                "type": "string",
                "maxLength": 20,
                "example": "indooroopilly"
              },
              "state": {
                "type": "string",
                "maxLength": 3,
                "enum": [
                  "NSW",
                  "QLD",
                  "VIC",
                  "WA",
                  "SA",
                  "TAS",
                  "ACT",
                  "NT"
                ],
                "example": "QLD"
              },
              "postcode": {
                "type": "string",
                "maxLength": 4,
                "example": "4000"
              }
            },
            "additionalProperties": false,
            "required": [
              "street",
              "suburb",
              "state",
              "postcode"
            ]
          },
          "type": {
            "type": "string",
            "maxLength": 20,
            "enum": [
              "house",
              "apartment",
              "unit",
              "townhouse"
            ],
            "example": "apartment"
          },
          "status": {
            "type": "string",
            "maxLength": 20,
            "enum": [
              "selling",
              "sold",
              "manage"
            ],
            "example": "selling"
          },
          "sourceType": {
            "type": "string",
            "maxLength": 20,
            "enum": [
              "new",
              "established",
              "off the plan"
            ],
            "example": "established"
          },
          "cityCouncil": {
            "type": "string",
            "maxLength": 50,
            "example": "Brisbane City Council"
          },
          "yearBuilt": {
            "type": "number",
            "minimum": 1800,
            "maximum": 3000,
            "example": 2015
          },
          "coordinates": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number",
                "minimum": -180,
                "maximum": 180,
                "example": "27.29535"
              },
              "lng": {
                "type": "number",
                "minimum": -180,
                "maximum": 180,
                "example": "152.58337"
              }
            },
            "required": [
              "lat",
              "lng"
            ],
            "additionalProperties": false
          },
          "bedrooms": {
            "type": "number",
            "minimum": 0,
            "maximum": 20,
            "example": 4
          },
          "bathrooms": {
            "type": "number",
            "minimum": 0,
            "maximum": 20,
            "example": 2
          },
          "carSpaces": {
            "type": "number",
            "minimum": 0,
            "maximum": 20,
            "example": 2
          },
          "houseArea": {
            "type": "number",
            "minimum": 0,
            "maximum": 99999,
            "example": 210
          },
          "landArea": {
            "type": "number",
            "minimum": 0,
            "maximum": 99999,
            "example": 550
          },
          "description": {
            "type": "string",
            "example": "This house is in perfect condition."
          },
          "landPrice": {
            "type": "number",
            "minimum": 0,
            "maximum": 999999999999,
            "example": "500000"
          },
          "housePrice": {
            "type": "number",
            "minimum": 0,
            "maximum": 999999999999,
            "example": "800000"
          },
          "settlementTime": {
            "type": "string",
            "maximum": 100,
            "example": "2025-03-05"
          },
          "createdBy": {
            "type": "string",
            "maximum": 100,
            "example": "david"
          },
          "createdDate": {
            "type": "string",
            "maximum": 100,
            "example": "2023-07-10T11:14:18.148Z"
          },
          "agent": {
            "type": "string",
            "maximum": 100,
            "example": "david"
          },
          "solicitor": {
            "type": "string",
            "maximum": 100,
            "example": "Mr. Lee"
          },
          "POIs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "maxLength": 100
                },
                "name": {
                  "type": "string",
                  "maxLength": 100
                },
                "coordinates": {
                  "type": "object",
                  "properties": {
                    "lat": {
                      "type": "number",
                      "minimum": -180,
                      "maximum": 180,
                      "example": "27.29535"
                    },
                    "lng": {
                      "type": "number",
                      "minimum": -180,
                      "maximum": 180,
                      "example": "152.58337"
                    }
                  },
                  "required": [
                    "lat",
                    "lng"
                  ],
                  "additionalProperties": false
                },
                "address": {
                  "type": "string",
                  "maxLength": 200
                },
                "distance": {
                  "type": "string",
                  "maxLength": 100
                },
                "duration": {
                  "type": "string",
                  "maxLength": 100
                },
                "rating": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                },
                "types": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "maxLength": 100
                  }
                },
                "user_ratings_total": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 1000
                }
              },
              "required": [
                "id"
              ],
              "additionalProperties": false
            }
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "PK": {
                  "type": "string",
                  "example": "File"
                },
                "id": {
                  "type": "string",
                  "example": "cef895d0-465f-11ee-be56-0242ac120002"
                },
                "path": {
                  "type": "string",
                  "example": "https://crm-files-jr.s3.ap-southeast-2.amazonaws.com/a4988aef-52b1-4968-a2b1-488cd1f6f079?X-Amz-Algorithm=AWS4-HMAC-SHA256"
                },
                "isCover": {
                  "type": "boolean"
                },
                "isPublic": {
                  "type": "boolean"
                },
                "createdBy": {
                  "type": "string",
                  "maximum": 100,
                  "example": "david"
                },
                "createdDate": {
                  "type": "string",
                  "maximum": 100,
                  "example": "2023-07-10T11:14:18.148Z"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": [
          "address",
          "type",
          "sourceType"
        ],
        "additionalProperties": false
      },
      "addFile": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "PK": {
              "type": "string",
              "example": "File"
            },
            "id": {
              "type": "string",
              "example": "cef895d0-465f-11ee-be56-0242ac120002"
            },
            "path": {
              "type": "string",
              "example": "https://crm-files-jr.s3.ap-southeast-2.amazonaws.com/a4988aef-52b1-4968-a2b1-488cd1f6f079?X-Amz-Algorithm=AWS4-HMAC-SHA256"
            },
            "isCover": {
              "type": "boolean"
            },
            "isPublic": {
              "type": "boolean"
            },
            "createdBy": {
              "type": "string",
              "maximum": 100,
              "example": "david"
            },
            "createdDate": {
              "type": "string",
              "maximum": 100,
              "example": "2023-07-10T11:14:18.148Z"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "updateFile": {
        "type": "object",
        "properties": {
          "PK": {
            "type": "string",
            "example": "File"
          },
          "id": {
            "type": "string",
            "example": "cef895d0-465f-11ee-be56-0242ac120002"
          },
          "path": {
            "type": "string",
            "example": "https://crm-files-jr.s3.ap-southeast-2.amazonaws.com/a4988aef-52b1-4968-a2b1-488cd1f6f079?X-Amz-Algorithm=AWS4-HMAC-SHA256"
          },
          "isCover": {
            "type": "boolean"
          },
          "isPublic": {
            "type": "boolean"
          },
          "createdBy": {
            "type": "string",
            "maximum": 100,
            "example": "david"
          },
          "createdDate": {
            "type": "string",
            "maximum": 100,
            "example": "2023-07-10T11:14:18.148Z"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "PK",
          "id",
          "path"
        ],
        "additionalProperties": false
      },
      "addClient": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50,
            "example": "John Smith"
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 50,
            "example": "john.smith@gmail.com"
          },
          "phone": {
            "type": "string",
            "minLength": 3,
            "maxLength": 20,
            "example": "0412345678"
          },
          "dob": {
            "type": "string",
            "description": "Date of birth, formatting toISOString",
            "maxLength": 50,
            "example": "2000-09-03T00:00:00.000Z"
          },
          "category": {
            "type": "string",
            "description": "category name from settings",
            "maxLength": 50,
            "example": "category_0"
          },
          "createdBy": {
            "type": "string",
            "maxLength": 50,
            "example": "Dave"
          },
          "gender": {
            "type": "string",
            "maxLength": 20,
            "enum": [
              "Male",
              "Female"
            ],
            "example": "Male"
          },
          "knownBy": {
            "type": "string",
            "maxLength": 20,
            "enum": [
              "Friend",
              "Social Event",
              "Open Home",
              "Social Media",
              "Consulting",
              "Other"
            ],
            "example": "Social Event"
          },
          "notes": {
            "type": "string",
            "example": "This is notes"
          },
          "reminderID": {
            "type": "string",
            "maxLength": 20,
            "example": "cef895d0-465f-11ee-be56-0242ac120002"
          },
          "visa": {
            "type": "string",
            "maxLength": 30,
            "enum": [
              "Unknown",
              "Permanent Resident",
              "Citizen",
              "Student Visa",
              "Working Visa",
              "Visitor Visa",
              "Family Partner Visa",
              "Other Visa"
            ],
            "example": "Working Visa"
          },
          "social": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 30,
                  "enum": [
                    "Wechat",
                    "Redbook",
                    "Tiktok"
                  ]
                },
                "value": {
                  "type": "string",
                  "maxLength": 100
                }
              }
            }
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": true
      },
      "marketing": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "example": "Email Subject"
          },
          "sender": {
            "type": "string",
            "format": "email",
            "example": "john.smith@gmail.com"
          },
          "receivers": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "replyTo": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "ccTo": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "content": {
            "type": "string",
            "example": "<h1>Email Headline</h1>"
          }
        },
        "required": [
          "subject",
          "sender",
          "receivers",
          "content"
        ],
        "additionalProperties": false
      },
      "addTemplate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "HelloTemplate"
          },
          "subject": {
            "type": "string",
            "example": "Hello"
          },
          "createdBy": {
            "type": "string",
            "example": "David"
          },
          "template": {
            "type": "string",
            "example": "<h1>This is a hello email.</h1>"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "addSettings": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "RMBCurrency"
          },
          "value": {
            "type": "string",
            "example": "6.1"
          }
        },
        "required": [
          "name",
          "value"
        ],
        "additionalProperties": false
      },
      "addReminder": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "MyReminder"
          },
          "createdBy": {
            "type": "string",
            "example": "David"
          },
          "description": {
            "type": "string",
            "example": "Reminder me to call him"
          },
          "reference": {
            "properties": {
              "PK": {
                "type": "string",
                "example": "Client"
              },
              "id": {
                "type": "string",
                "example": "aaa895d0-465f-11ee-be56-0242ac120002"
              }
            },
            "required": [
              "PK",
              "id"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "name",
          "lastModifiedDate"
        ],
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Bearer token"
      }
    }
  }
}